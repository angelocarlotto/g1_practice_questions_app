// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//npx prisma generate 

generator client {
  provider = "prisma-client-js"
   //previewFeatures = ["driverAdapters","relationJoins"]
  //output   = "./generated/client"
  // provider = "postgresql"
  //url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  //directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

datasource db {
  provider = "postgresql"
 // provider = "sqlite"
  url      = env("DATABASE_URL")
}


model step{
  id Int     @id @default(autoincrement())
  subdivisionid Int
  categoryid Int
  num Int
  title String
  shorttitle String
  titlepart1 String
  titlepart2 String
  description String
  tests test[]
}


model test {
  id                  Int     @id @default(autoincrement())
  type                Int
  allowedmistakes     Int
  numberofquestions   Int
  questionphrase      String
  agetoapply          String
  orderindex          Int
  endorsementcode     String
  stepid              Int
  premiumonly         Int
  fulldescription     String
  cover               String
  step                step   @relation(fields: [stepid], references: [id])
  test_name   test_name[]
}




model test_name{
t_id Int
n_id Int
test          test          @relation(fields: [t_id], references: [id])
test_names    test_names    @relation(fields: [n_id], references: [id])
@@id(name: "test_nameId", [t_id, n_id])
}


model test_names{

    id Int     @id @default(autoincrement())
    title String
    shorttitle String
    description String
    test_name test_name[]
}